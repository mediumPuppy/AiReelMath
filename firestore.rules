rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Helper functions
    function isAuthenticated() {
      return request.auth != null;
    }
    
    function isOwner(userId) {
      return request.auth.uid == userId;
    }

    // Users collection
    match /users/{userId} {
      allow read: if isAuthenticated();
      allow write: if isOwner(userId);
    }

    // Videos collection - readable by all authenticated users
    match /videos/{videoId} {
      allow read: if isAuthenticated();
      allow write: if false;  // Only admins can write (use Firebase Admin SDK)
    }

    // Topics collection
    match /topics/{topicId} {
      allow read: if true;  // Later, change to: if request.auth != null;
      allow write: if true; // Later, change to: if request.auth != null && request.auth.token.admin == true;
    }

    // Learning paths
    match /learningPaths/{pathId} {
      allow read: if isAuthenticated();
      allow write: if false;  // Admin only
    }

    // Ratings and comments
    match /videoRatings/{ratingId} {
      allow read: if isAuthenticated();
      allow create: if isAuthenticated() && request.resource.data.userId == request.auth.uid;
      allow update, delete: if isOwner(resource.data.userId);
    }

    match /creatorRatings/{ratingId} {
      allow read: if isAuthenticated();
      allow create: if isAuthenticated() && request.resource.data.userId == request.auth.uid;
      allow update, delete: if isOwner(resource.data.userId);
    }

    match /comments/{commentId} {
      allow read: if isAuthenticated();
      allow create: if isAuthenticated() && request.resource.data.userId == request.auth.uid;
      allow update, delete: if isOwner(resource.data.userId);
    }
  }
} 